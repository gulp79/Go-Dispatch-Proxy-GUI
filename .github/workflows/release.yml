name: Release Python Application

on:
  push:
    tags:
      - 'v*'  # Run workflow on version tags, e.g. v1.0.0

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false

  build-and-release:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: windows-latest
            asset_name: go-dispatch-proxy-gui-windows
            asset_extension: .zip
          - os: ubuntu-latest
            asset_name: go-dispatch-proxy-gui-linux
            asset_extension: .tar.gz
          - os: macos-latest
            asset_name: go-dispatch-proxy-gui-macos
            asset_extension: .zip

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        shell: bash

      - name: Build with PyInstaller
        run: |
          pyinstaller go-dispatch-proxy-gui.spec

      - name: Archive Windows build
        if: matrix.os == 'windows-latest'
        run: |
          powershell Compress-Archive -Path dist/* -DestinationPath ${{ matrix.asset_name }}${{ matrix.asset_extension }}

      - name: Archive Linux build
        if: matrix.os == 'ubuntu-latest'
        run: |
          tar -C dist -czvf ${{ matrix.asset_name }}${{ matrix.asset_extension }} .

      - name: Archive macOS build
        if: matrix.os == 'macos-latest'
        run: |
          ditto -c -k --keepParent dist ${{ matrix.asset_name }}${{ matrix.asset_extension }}

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.asset_name }}${{ matrix.asset_extension }}
          asset_name: ${{ matrix.asset_name }}${{ matrix.asset_extension }}
          asset_content_type: application/octet-stream
